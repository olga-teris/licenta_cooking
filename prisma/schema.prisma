// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id                  Int         @id @default(autoincrement())
  name                String     
  email               String     
  password            String 
  fridge              fridge[]
  preferences         preferences[] 
  contraindications   contraindications[]    
}

model ingredient {
  id                  Int     @id @default(autoincrement())
  name                String
  fridge              fridge[]
  recipeIng           recipeIng[]
  preferences         preferences[]
  contraindications   contraindications[] 
}

model fridge {
  users             user         @relation(fields: [userId], references: [id])
  userId            Int
  ingredients       ingredient   @relation(fields: [ingredientId], references: [id])
  ingredientId      Int

  @@unique([userId, ingredientId])
}

model recipe {
  id            Int        @id @default(autoincrement())
  name          String
  recipeIng     recipeIng[]
  recipeCat     recipeCat[]
}

model category {
  id            Int        @id @default(autoincrement())
  name          String
  recipeCat     recipeCat[]
}

model recipeIng {
  recipeId        Int
  ingredientId    Int
  recipes         recipe          @relation(fields: [recipeId], references: [id])
  ingredients     ingredient      @relation(fields: [ingredientId], references: [id])

  @@unique([recipeId, ingredientId])
}

model recipeCat {
  recipeId        Int
  categoryId      Int
  recipes         recipe          @relation(fields: [recipeId], references: [id])
  categories      category        @relation(fields: [categoryId], references: [id])

  @@unique([recipeId, categoryId])
}

model preferences {
  users             user         @relation(fields: [userId], references: [id])
  userId            Int
  ingredients       ingredient   @relation(fields: [ingredientId], references: [id])
  ingredientId      Int
  liked              Boolean

  @@unique([userId, ingredientId], name: "pref")
}

model contraindications {
  users             user         @relation(fields: [userId], references: [id])
  userId            Int
  ingredients       ingredient   @relation(fields: [ingredientId], references: [id])
  ingredientId      Int

  @@unique([userId, ingredientId], name: "contr")
}